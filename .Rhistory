par(mfrow=c(3, 2))
x <- c(0.5, 2, 4, 8, 12, 16)
y1 <- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)
y2 <- c(4, .8, .5, .45, .4, .3)
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
plot.new()
plot.window(range(x), c(0, 6))
lines(x, y1)
lines(x, y2)
points(x, y1, pch=16, cex=2) # Try different cex value?
points(x, y2, pch=21, bg="white", cex=2)  # Different background color
par(col="gray50", fg="gray50", col.axis="gray50")
axis(1, at=seq(0, 16, 4)) # What is the first number standing for?
axis(2, at=seq(0, 6, 2))
axis(4, at=seq(0, 6, 2))
box(bty="u")
mtext("Travel Time (s)", side=1, line=2, cex=0.8)
mtext("Responses per Travel", side=2, line=2, las=0, cex=0.8)
mtext("Responses per Second", side=4, line=2, las=0, cex=0.8)
text(4, 5, "Bird 131")
par(mar=c(5.1, 4.1, 4.1, 2.1), col="black", fg="black", col.axis="black")
# Histogram
# Random data
Y <- rnorm(50)
# Make sure no Y exceed [-3.5, 3.5]
Y[Y < -3.5 | Y > 3.5] <- NA # Selection/set range
x <- seq(-3.5, 3.5, .1)
dn <- dnorm(x)
par(mar=c(4.5, 4.1, 3.1, 0))
hist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5),
col="gray80", freq=FALSE)
lines(x, dnorm(x), lwd=2)
par(mar=c(5.1, 4.1, 4.1, 2.1))
# Barplot
par(mar=c(2, 3.1, 2, 2.1))
midpts <- barplot(VADeaths,
col=gray(0.1 + seq(1, 9, 2)/11),
names=rep("", 4))
mtext(sub(" ", "\n", colnames(VADeaths)),
at=midpts, side=1, line=0.5, cex=0.5)
text(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,
VADeaths,
col=rep(c("white", "black"), times=3:2),
cex=0.8)
par(mar=c(5.1, 4.1, 4.1, 2.1))
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
plot.new()
plot.window(range(x), c(0, 6))
lines(x, y1)
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
plot.new()
plot.window(range(x), c(0, 6))
lines(x, y1)
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
plot.new()
plot.window(range(x), c(0, 6))
lines(x, y1)
set.seed(123)
# Number of observations
n <- 100
# Generate filler data
filler_data <- data.frame(
ID = 1:n,
age = sample(18:65, n, replace = TRUE),
income = round(runif(n, 30000, 100000), 0),
gender = sample(c("Male", "Female", "Other"), n, replace = TRUE, prob = c(0.45, 0.45, 0.1))
)
# View first few rows of the dataset
head(filler_data)
par(mfrow=c(3, 2))
x <- c(0.5, 2, 4, 8, 12, 16)
y1 <- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)
y2 <- c(4, .8, .5, .45, .4, .3)
x <- c(0.5, 2, 4, 8, 12, 16)
y1 <- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)
y2 <- c(4, .8, .5, .45, .4, .3)
# Setting label orientation, margins c(bottom, left, top, right) & text size
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
plot.new()
plot.window(range(x), c(0, 6))
lines(x, y1)
lines(x, y2)
points(x, y1, pch=16, cex=3) # Try different cex value? Changing to 3 makes the points larger
points(x, y2, pch=21, bg="white", cex=2)  # Different background color
par(col="gray50", fg="gray50", col.axis="gray50")
axis(1, at=seq(0, 16, 4)) # What is the first number standing for? # The 1 means we are altering the x-axis
axis(2, at=seq(0, 6, 2))
axis(4, at=seq(0, 6, 2))
box(bty="u")
mtext("Travel Time (s)", side=1, line=2, cex=0.8)
mtext("Responses per Travel", side=2, line=2, las=0, cex=0.8)
mtext("Responses per Second", side=4, line=2, las=0, cex=0.8)
text(4, 5, "Bird 131")
par(mar=c(5.1, 4.1, 4.1, 2.1), col="black", fg="black", col.axis="black")
# Set seed for reproducibility
set.seed(123)
# Number of observations
n <- 100
# Generate filler data
filler_data <- data.frame(
ID = 1:n,
age = sample(18:65, n, replace = TRUE),
income = round(runif(n, 30000, 100000), 0),
gender = sample(c("Male", "Female", "Other"), n, replace = TRUE, prob = c(0.45, 0.45, 0.1))
)
# Setting parameters
par(mfrow=c(3, 2))
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
# Scatterplot
lot.new()
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
# Scatterplot
plot.new()
plot.window(range(filler_data$age), range(filler_data$income))
lines(lowess(filler_data$age, filler_data$income), col="gray50")
points(filler_data$age, filler_data$income, pch=16, cex=1.5, col="blue")
points(filler_data$age, filler_data$income, pch=21, bg="white", cex=1.2)
axis(1, at=seq(age_min, age_max, 10)) # X-axis
par(mar=c(4.5, 4.1, 3.1, 0))
# Histogram
hist(filler_data$income,
breaks=seq(min(filler_data$income), max(filler_data$income), by=5000),
ylim=c(0, max(table(cut(filler_data$income, breaks=seq(min(filler_data$income), max(filler_data$income), by=5000)))) * 1.1),
col="gray80",
freq=FALSE,
main="Income Distribution",
xlab="Income (USD)")
# Set up the plot parameters
par(mar=c(4.5, 4.1, 3.1, 0))
# Histogram
hist(filler_data$income,
breaks="FD",
ylim=c(0, max(table(cut(filler_data$income, breaks="FD"))) * 1.1),
col="gray80",
freq=FALSE,
main="Income Distribution",
xlab="Income (USD)")
par(mar=c(4.5, 4.1, 3.1, 0))
# Define breaks using pretty() for better range coverage
breaks <- pretty(filler_data$income, n = 10)  # 10 breaks
# Create histogram for Income
hist(filler_data$income,
breaks=breaks,  # Use the defined breaks
ylim=c(0, max(table(cut(filler_data$income, breaks=breaks))) * 1.1),
col="gray80",
freq=FALSE,
main="Income Distribution",
xlab="Income (USD)")
# Overlay normal distribution curve
x <- seq(min(filler_data$income), max(filler_data$income), length.out=100)
lines(x, dnorm(x, mean=mean(filler_data$income), sd=sd(filler_data$income)), lwd=2)
# Reset margins to default
par(mar=c(5.1, 4.1, 4.1, 2.1))
# Summarize the data: Average income by gender
income_summary <- aggregate(income ~ gender, data=filler_data, FUN=mean)
# Barplot
par(mar=c(2, 3.1, 2, 2.1))
midpts <- barplot(income_summary$income,
col=gray(0.1 + seq(1, 3, 1)/4),
names.arg=income_summary$gender,
ylim=c(0, max(income_summary$income) * 1.1))
# Adding text on top of bars
text(midpts, income_summary$income,
round(income_summary$income, 0),
pos=3, cex=0.8, col="black")
# Reset margins to default
par(mar=c(5.1, 4.1, 4.1, 2.1))
# Boxplot
par(mar=c(3, 4.1, 2, 0))
# Create boxplot of income by gender
boxplot(income ~ gender, data=filler_data,
boxwex = 0.25, col=c("white", "gray"),
xlab="",
ylab="Income (USD)", ylim=c(0, max(filler_data$income) * 1.1))
# Add labels for gender on the x-axis
mtext("Gender", side=1, line=2.5, cex=0.8)
# Adding a legend
legend("topright", legend=c("Female", "Male"),
fill=c("white", "gray"),
bty="n")
# Reset margins to default
par(mar=c(5.1, 4.1, 4.1, 2.1))
# Define age and income sequences for the grid
age_seq <- seq(min(filler_data$age), max(filler_data$age), length=30)
income_seq <- seq(min(filler_data$income), max(filler_data$income), length=30)
# Create a function for z values; in this case, let's use a simple density estimate
f <- function(x, y) {
mean_income <- mean(filler_data$income[filler_data$age == x], na.rm = TRUE)
return(ifelse(is.na(mean_income), 0, mean_income))
}
# Create a grid of z values using outer
z <- outer(age_seq, income_seq, Vectorize(f))
# Replace NA with a value (for better visualization)
z[is.na(z)] <- 0
# Set up the perspective plot
par(mar=c(0, 0.5, 0, 0), lwd=0.5)
persp(age_seq, income_seq, z,
theta = 30,
phi = 30,
expand = 0.5,
col="lightblue",
xlab="Age (Years)",
ylab="Income (USD)",
zlab="Mean Income")
# Reset margins to default
par(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)
# Summarize the data: Count of individuals by gender
gender_counts <- table(filler_data$gender)
# Create pie chart
par(mar=c(0, 0, 0, 0))  # No margins for a clean look
pie(gender_counts,
col=c("lightblue", "lightgreen"),
labels=paste(names(gender_counts), "\n", gender_counts, sep=""),
main="Gender Distribution in Filler Data")
# Reset margins to default
par(mar=c(5.1, 4.1, 4.1, 2.1))
install.packages(c("ggplot2","gapminder"))
library(ggplot2)
library(gapminder)
gm = gapminder
p <- ggplot(data = gm)
p <- ggplot(data = gm,
t(da
gdpPercap,
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp))
p
p + geom_point(size=2)
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp, color=continent))
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp, color=continent))
p + geom_point()
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(pch=16) + geom_smooth(method="lm")
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = "purple"))
p + geom_point() +
geom_smooth(method = "loess") +
scale_x_log10()
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(color = "purple") +
geom_smooth(method = "loess") + scale_x_log10()
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(color = "purple") +
geom_smooth(method = "loess") + scale_x_log10() +
xlab("GDP per capita") +
ylab("Life Expectancy")
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(color = "purple") +
geom_smooth(method = "loess") + scale_x_log10() +
xlab("GDP per capita") +
ylab("Life Expectancy") +
facet_wrap(~ continent, nrow=2)
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(color = "purple") +
geom_smooth(method = "loess") + scale_x_log10() +
xlab("GDP per capita") +
ylab("Life Expectancy") +
facet_wrap(~ continent, nrow=2) +
theme(text=element_text(size=14, family="Palatino"))
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(color = "purple") +
geom_smooth(method = "loess") + scale_x_log10() +
xlab("GDP per capita") +
ylab("Life Expectancy") +
facet_wrap(~ continent, nrow=2) +
theme(text=element_text(size=14, family="Palatino")) +
theme_bw()
p <- ggplot(data = gm,
mapping = aes(x = gdpPercap,
y = lifeExp))
p + geom_point(color = "purple") +
geom_smooth(method = "loess") + scale_x_log10() +
xlab("GDP per capita") +
ylab("Life Expectancy") +
facet_wrap(~ continent, nrow=2)  +
theme_bw() +
theme(text=element_text(size=14, family="Palatino"))
# Sample data
data <- rnorm(100, mean = 50, sd = 10)
# Create histogram
hist(data,
main = "Base R Histogram",
xlab = "Values",
col = "skyblue",
border = "white",
breaks = 10)
# Base R Histogram to PDF
pdf("histogram_base.pdf")
hist(data,
main = "Base R Histogram",
xlab = "Values",
col = "skyblue",
border = "white",
breaks = 10)
dev.off()
getwd()
# ggplot2 Histogram to PDF
pdf("histogram_ggplot2.pdf")
ggplot(data = data.frame(data), aes(x = data)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "white") +
ggtitle("ggplot2 Histogram") +
theme_minimal()
install.packages("ggplot2")
library(ggplot2)
# ggplot2 Histogram to PDF
pdf("histogram_ggplot2.pdf")
ggplot(data = data.frame(data), aes(x = data)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "white") +
ggtitle("ggplot2 Histogram") +
theme_minimal()
dev.off()
# Sample data
counts <- c(10, 15, 20, 25)
categories <- c("A", "B", "C", "D")
# Create vertical bar chart
barplot(counts,
names.arg = categories,
main = "Vertical Bar Chart",
col = "tomato",
border = "black")
# Horizontal bar chart
barplot(counts,
names.arg = categories,
main = "Horizontal Bar Chart",
col = "lightgreen",
border = "black",
horiz = TRUE)
# Create pie chart
pie(counts,
labels = categories,
main = "Base R Pie Chart",
col = rainbow(length(categories)))
# Sample data
set.seed(123)
group1 <- rnorm(20, mean = 5)
group2 <- rnorm(20, mean = 7)
# Create boxplot
boxplot(group1, group2,
names = c("Group 1", "Group 2"),
main = "Base R Boxplot",
col = c("orange", "blue"))
# Sample data
x <- rnorm(50)
y <- x + rnorm(50, mean = 0, sd = 0.5)
# Create scatterplot
plot(x, y,
main = "Base R Scatterplot",
xlab = "X-axis",
ylab = "Y-axis",
col = "purple",
pch = 16)
ggplot(data = data.frame(data), aes(x = data)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "white") +
ggtitle("ggplot2 Histogram") +
theme_minimal()
bar_data <- data.frame(Category = categories, Count = counts)
ggplot(bar_data, aes(x = Category, y = Count)) +
geom_bar(stat = "identity", fill = "tomato", color = "black") +
ggtitle("Vertical Bar Chart (ggplot2)") +
theme_minimal()
ggplot(bar_data, aes(x = Count, y = Category)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "black") +
ggtitle("Horizontal Bar Chart (ggplot2)") +
theme_minimal()
# Horizontal bar chart
barplot(counts,
names.arg = categories,
main = "Horizontal Bar Chart",
col = "lightgreen",
border = "black",
horiz = TRUE)
ggplot(bar_data, aes(x = "", y = Count, fill = Category)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
ggtitle("Pie Chart (ggplot2)") +
theme_void()
box_data <- data.frame(
Value = c(group1, group2),
Group = rep(c("Group 1", "Group 2"), each = 20)
)
ggplot(box_data, aes(x = Group, y = Value, fill = Group)) +
geom_boxplot() +
ggtitle("ggplot2 Boxplot") +
theme_minimal()
scatter_data <- data.frame(x = x, y = y)
ggplot(scatter_data, aes(x = x, y = y)) +
geom_point(color = "purple", size = 3) +
ggtitle("ggplot2 Scatterplot") +
theme_minimal()
# ggplot2 Histogram to PDF
pdf("histogram_ggplot2.pdf")
ggplot(data = data.frame(data), aes(x = data)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "white") +
ggtitle("ggplot2 Histogram") +
theme_minimal()
dev.off()
# ggplot2 Histogram to PDF
pdf("histogram_ggplot2.pdf")
ggplot(data = data.frame(data), aes(x = data)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "white") +
ggtitle("ggplot2 Histogram") +
theme_minimal()
dev.off()
# ggplot2 Histogram to PDF
pdf("histogram_ggplot2.pdf")
ggplot(data = data.frame(data), aes(x = data)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "white") +
ggtitle("ggplot2 Histogram") +
theme_minimal()
dev.off()
# Base R Vertical Bar Chart to JPEG
jpeg("bar_vertical_base.jpg")
barplot(counts,
names.arg = categories,
main = "Vertical Bar Chart",
col = "tomato",
border = "black")
dev.off()
# Base R Horizontal Bar Chart to JPEG
jpeg("bar_horizontal_base.jpg")
barplot(counts,
names.arg = categories,
main = "Horizontal Bar Chart",
col = "lightgreen",
border = "black",
horiz = TRUE)
dev.off()
# ggplot2 Vertical Bar Chart to JPEG
jpeg("bar_vertical_ggplot2.jpg")
ggplot(bar_data, aes(x = Category, y = Count)) +
geom_bar(stat = "identity", fill = "tomato", color = "black") +
ggtitle("Vertical Bar Chart (ggplot2)") +
theme_minimal()
dev.off()
# ggplot2 Histogram to PDF
pdf("histogram_ggplot2.pdf")
ggplot(data = data.frame(data), aes(x = data)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "white") +
ggtitle("ggplot2 Histogram") +
theme_minimal()
dev.off()
# ggplot2 Horizontal Bar Chart to JPEG
jpeg("bar_horizontal_ggplot2.jpg")
ggplot(bar_data, aes(x = Count, y = Category)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "black") +
ggtitle("Horizontal Bar Chart (ggplot2)") +
theme_minimal()
dev.off()
# Base R Pie Chart to SVG
svg("pie_chart_base.svg")
pie(counts,
labels = categories,
main = "Base R Pie Chart",
col = rainbow(length(categories)))
dev.off()
# ggplot2 Pie Chart to SVG
svg("pie_chart_ggplot2.svg")
ggplot(bar_data, aes(x = "", y = Count, fill = Category)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
ggtitle("Pie Chart (ggplot2)") +
theme_void()
dev.off()
# Base R Boxplot to TIFF
tiff("boxplot_base.tiff")
boxplot(group1, group2,
names = c("Group 1", "Group 2"),
main = "Base R Boxplot",
col = c("orange", "blue"))
dev.off()
# ggplot2 Boxplot to TIFF
tiff("boxplot_ggplot2.tiff")
ggplot(box_data, aes(x = Group, y = Value, fill = Group)) +
geom_boxplot() +
ggtitle("ggplot2 Boxplot") +
theme_minimal()
dev.off()
# Base R Scatterplot to BMP
bmp("scatterplot_base.bmp")
plot(x, y,
main = "Base R Scatterplot",
xlab = "X-axis",
ylab = "Y-axis",
col = "purple",
pch = 16)
dev.off()
# ggplot2 Scatterplot to BMP
bmp("scatterplot_ggplot2.bmp")
ggplot(scatter_data, aes(x = x, y = y)) +
geom_point(color = "purple", size = 3) +
ggtitle("ggplot2 Scatterplot") +
theme_minimal()
dev.off()
